#!/usr/bin/env bash

set -e

# Usage
# tmux-new <session> [<opts>]
#
# Creates a new tmux-session.
# Does nothing if session exists.

debug_on=false

debug() {
  if [[ "$debug_on" != "true" ]]; then
    return
  fi
  local k=$1
  local v=$2
  if [[ -n $v ]]; then
    echo "[tmux_new] $k = $v"
  else
    echo "[tmux_new] $k"
  fi
}

_get_session_name() {
  local v="$1"
  local default_name=$(tmux-new-session-name)
  if [ -z "$v" ]; then
    v=$default_name
  fi
  echo $v
}

_get_should_attach() {
  if [[ "$1" = "-d" ]]; then
    echo "false"
  fi
  echo "true"
}

_create_session() {
  tmux new-session -Ad -s $s -n "$window_name"
}

_attach_session() {
  if [[ "$should_attach" != "true" ]]; then
    debug "exiting without attach"
    exit 0
  fi
  tmux-attach $s
}

_tmux_new() {
  if [[ "$session_exists" == "true" ]]; then
    _attach_session
  else
    _create_session
    _attach_session
  fi
}

main() {
  local s=$(_get_session_name "$1")
  local should_attach=$(_get_should_attach "$2")
  local session_exists=$(tmux-session-exists $s)
  local window_name="main"
  debug s $s
  debug session_exists $session_exists
  _tmux_new
}

main "$@"
